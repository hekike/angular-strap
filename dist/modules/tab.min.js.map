{"version":3,"sources":["tab/tab.js"],"names":["angular","module","provider","defaults","this","animation","template","baseClass","controller","$scope","$element","$attrs","self","$options","copy","forEach","key","isDefined","$panes","$viewChangeListeners","$push","pane","push","$active","$setActive","value","fn","$get","$tab","directive","$window","$animate","require","transclude","scope","templateUrl","element","attr","link","attrs","controllers","ngModelCtrl","bsTabsCtrl","addClass","$setViewValue","$formatters","modelValue","title","render","index","indexOf","active"],"mappings":"AAOA,YACAA,SAAQC,OAAO,yBAA0BC,SAAS,OAAQ,WACxD,GAAIC,GAAWC,KAAKD,UAChBE,UAAW,UACXC,SAAU,mBACVC,UAAW,QAEXC,EAAaJ,KAAKI,WAAa,SAAUC,EAAQC,EAAUC,GAC3D,GAAIC,GAAOR,IAEXQ,GAAKC,SAAWb,QAAQc,KAAKX,GAC7BH,QAAQe,SAAS,aAAc,SAAUC,GACnChB,QAAQiB,UAAUN,EAAOK,MAC3BJ,EAAKC,SAASG,GAAOL,EAAOK,MAEhCJ,EAAKM,OAAST,EAAOS,UACrBN,EAAKO,wBACLP,EAAKQ,MAAQ,SAAUC,GACrBT,EAAKM,OAAOI,KAAKD,IAEnBT,EAAKM,OAAOK,QAAU,EACtBX,EAAKY,WAAaf,EAAOe,WAAa,SAAUC,GAC9Cb,EAAKM,OAAOK,QAAUE,EACtBb,EAAKO,qBAAqBJ,QAAQ,SAAUW,GAC1CA,OAIRtB,MAAKuB,KAAO,WACV,GAAIC,KAGJ,OAFAA,GAAKzB,SAAWA,EAChByB,EAAKpB,WAAaA,EACXoB,KAERC,UAAU,UACX,UACA,WACA,OACA,SAAUC,EAASC,EAAUH,GAC3B,GAAIzB,GAAWyB,EAAKzB,QACpB,QACE6B,SACE,WACA,UAEFC,YAAY,EACZC,OAAO,EACP1B,WAAYoB,EAAKpB,WACjB2B,YAAa,SAAUC,EAASC,GAC9B,MAAOA,GAAK/B,UAAYH,EAASG,UAEnCgC,KAAM,SAAkBJ,EAAOE,EAASG,EAAOC,GAC7C,GAAIC,GAAcD,EAAY,GAC1BE,EAAaF,EAAY,EAE7BJ,GAAQO,SAASxC,EAASI,WACtBkC,IAEFC,EAAWvB,qBAAqBG,KAAK,WACnCmB,EAAYG,cAAcF,EAAWxB,OAAOK,WAG9CkB,EAAYI,YAAYvB,KAAK,SAAUwB,GAGrC,MADAJ,GAAWlB,WAAwB,EAAbsB,GACfA,UAMhBjB,UAAU,UACX,UACA,WACA,SAAUC,EAASC,GACjB,OACEC,SACE,YACA,WAEFE,OAASa,MAAO,KAChBT,KAAM,SAAkBJ,EAAOE,EAASG,EAAOC,GAW7C,QAASQ,KACP,GAAIC,GAAQP,EAAWxB,OAAOgC,QAAQhB,GAClCiB,EAAST,EAAWxB,OAAOK,OAC/BQ,GAASkB,IAAUE,EAAS,WAAa,eAAef,EAAS,UAbnE,GACIM,IADcF,EAAY,GACbA,EAAY,GAE7BJ,GAAQO,SAAS,YAEbD,EAAW7B,SAASR,WACtB+B,EAAQO,SAASD,EAAW7B,SAASR,WAGvCqC,EAAWtB,MAAMc,GAMjBQ,EAAWvB,qBAAqBG,KAAK,WACnC0B,MAEFA","file":"tab.min.js","sourcesContent":["'use strict';\n\nangular.module('mgcrea.ngStrap.tab', [])\n\n  .provider('$tab', function() {\n\n    var defaults = this.defaults = {\n      animation: 'am-fade',\n      template: 'tab/tab.tpl.html',\n      baseClass: 'tabs'\n    };\n\n    var controller = this.controller = function($scope, $element, $attrs) {\n      var self = this;\n\n      // Attributes options\n      self.$options = angular.copy(defaults);\n      angular.forEach(['animation'], function(key) {\n        if(angular.isDefined($attrs[key])) self.$options[key] = $attrs[key];\n      });\n\n      self.$panes = $scope.$panes = [];\n\n      self.$viewChangeListeners = [];\n\n      self.$push = function(pane) {\n        self.$panes.push(pane);\n      };\n\n      self.$panes.$active = 0;\n      self.$setActive = $scope.$setActive = function(value) {\n        self.$panes.$active = value;\n        self.$viewChangeListeners.forEach(function(fn) {\n          fn();\n        });\n      };\n\n    };\n\n    this.$get = function() {\n      var $tab = {};\n      $tab.defaults = defaults;\n      $tab.controller = controller;\n      return $tab;\n    };\n\n  })\n\n  .directive('bsTabs', function($window, $animate, $tab) {\n\n    var defaults = $tab.defaults;\n\n    return {\n      require: ['?ngModel', 'bsTabs'],\n      transclude: true,\n      scope: true,\n      controller: $tab.controller,\n      templateUrl: function(element, attr) {\n        return attr.template || defaults.template;\n      },\n      link: function postLink(scope, element, attrs, controllers) {\n\n        var ngModelCtrl = controllers[0];\n        var bsTabsCtrl = controllers[1];\n\n        // Add base class\n        element.addClass(defaults.baseClass);\n\n        if(ngModelCtrl) {\n\n          // Update the modelValue following\n          bsTabsCtrl.$viewChangeListeners.push(function() {\n            ngModelCtrl.$setViewValue(bsTabsCtrl.$panes.$active);\n          });\n\n          // modelValue -> $formatters -> viewValue\n          ngModelCtrl.$formatters.push(function(modelValue) {\n            // console.warn('$formatter(\"%s\"): modelValue=%o (%o)', element.attr('ng-model'), modelValue, typeof modelValue);\n            bsTabsCtrl.$setActive(modelValue * 1);\n            return modelValue;\n          });\n\n        }\n\n      }\n    };\n\n  })\n\n  .directive('bsPane', function($window, $animate) {\n\n    return {\n      require: ['^?ngModel', '^bsTabs'],\n      scope: {\n        title: '@'\n      },\n      link: function postLink(scope, element, attrs, controllers) {\n\n        var ngModelCtrl = controllers[0];\n        var bsTabsCtrl = controllers[1];\n\n        // Add base class\n        element.addClass('tab-pane');\n\n        // Add animation class\n        if(bsTabsCtrl.$options.animation) {\n          element.addClass(bsTabsCtrl.$options.animation);\n        }\n\n        // Push pane to parent bsTabs controller\n        bsTabsCtrl.$push(scope);\n\n        function render() {\n          var index = bsTabsCtrl.$panes.indexOf(scope);\n          var active = bsTabsCtrl.$panes.$active;\n          $animate[index === active ? 'addClass' : 'removeClass'](element, 'active');\n        }\n\n        bsTabsCtrl.$viewChangeListeners.push(function() {\n          render();\n        });\n        render();\n\n      }\n    };\n\n  });\n"],"sourceRoot":"/source/"}